 // üîπ Zak≈Çadka Dane u≈ºytkownika
  Widget _buildUserData() {
    return Container(
      color: Colors.black,
      child: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          // Adres e-mail
          ListTile(
            leading: const Icon(Icons.email, color: Colors.orange),
            title: const Text("Adres e-mail", style: TextStyle(color: Colors.white)),
            subtitle: Text(AppData.email, style: const TextStyle(color: Colors.white70)),
          ),
          const SizedBox(height: 16),
          // Has≈Ço z przyciskiem pod spodem
          ListTile(
            leading: const Icon(Icons.lock, color: Colors.orange),
            title: const Text("Has≈Ço", style: TextStyle(color: Colors.white)),
            subtitle: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  AppData.password.replaceAll(RegExp(r"."), "*"),
                  style: const TextStyle(color: Colors.white70),
                ),
                const SizedBox(height: 8),
               ElevatedButton(
                  onPressed: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => PasswordPage(email: widget.email),
                      ),
                    );
                  },
                  style: ElevatedButton.styleFrom(backgroundColor: Colors.orange),
                  child: const Text(
                    "Zmie≈Ñ has≈Ço",
                    style: TextStyle(color: Colors.white),
                  ),
                ),

              ],
            ),
          ),
        ],
      ),
    );
  }

  // üîπ Historia rezerwacji
  Widget _buildHistory() {
    return Container(
      color: Colors.black,
      child: ListView(
        padding: const EdgeInsets.all(16),
        children: const [
          ListTile(
            leading: Icon(Icons.movie, color: Colors.orange),
            title: Text("Avatar 2", style: TextStyle(color: Colors.white)),
            subtitle: Text("12.01.2024 ‚Ä¢ Sala 5 ‚Ä¢ 19:30", style: TextStyle(color: Colors.white70)),
          ),
          ListTile(
            leading: Icon(Icons.movie, color: Colors.orange),
            title: Text("Batman", style: TextStyle(color: Colors.white)),
            subtitle: Text("20.12.2023 ‚Ä¢ Sala 2 ‚Ä¢ 21:00", style: TextStyle(color: Colors.white70)),
          ),
        ],
      ),
    );
  }

  // üîπ Kupony
  Widget _buildCoupons() {
    final coupons = [
      "üéüÔ∏è -20% na bilety w weekend",
      "üçø Darmowy popcorn w poniedzia≈Çek",
    ];

    return Container(
      color: Colors.black,
      child: ListView.builder(
        padding: const EdgeInsets.all(16),
        itemCount: coupons.length,
        itemBuilder: (context, index) {
          final coupon = coupons[index];
          final code = _couponCodes[coupon];

          return Card(
            color: const Color.fromARGB(255, 48, 48, 48),
            child: Padding(
              padding: const EdgeInsets.all(20),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(coupon, style: const TextStyle(color: Colors.white, fontSize: 16)),
                  const SizedBox(height: 10),
                  if (code != null)
                    Text(
                      "Kod: $code",
                      style: const TextStyle(
                        color: Colors.white,
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  const SizedBox(height: 10),
                  ElevatedButton(
                    onPressed: code == null
                        ? () {
                            setState(() {
                              _couponCodes[coupon] = _generateCouponCode();
                            });
                          }
                        : null,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: code == null ? Colors.black87 : Colors.orange,
                    ),
                    child: const Text("Generuj kod"),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }

  // üîπ Zak≈Çadka Zmiana has≈Ça
  Widget _buildPasswordChange() {
    return Container(
      color: Colors.black,
      child: Center(
        child: SingleChildScrollView(
          child: ConstrainedBox(
            constraints: const BoxConstraints(maxWidth: 400),
            child: Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                children: [
                  Text(
                    "Zmie≈Ñ has≈Ço dla ${widget.email}",
                    style: const TextStyle(
                      color: Colors.orange,
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                    ),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(height: 20),
                  TextField(
                    controller: _passwordController,
                    obscureText: true,
                    decoration: InputDecoration(
                      hintText: "Wpisz nowe has≈Ço",
                      filled: true,
                      fillColor: const Color.fromARGB(255, 23, 23, 23),
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                    style: const TextStyle(color: Colors.white),
                  ),
                  const SizedBox(height: 20),
                  ElevatedButton(
                    onPressed: () {
                      if (_passwordController.text.isNotEmpty) {
                        // Zapisujemy nowe has≈Ço
                        AppData.password = _passwordController.text;

                        // Czy≈õcimy pole
                        _passwordController.clear();

                        // Komunikat o zmianie has≈Ça
                        ScaffoldMessenger.of(context).showSnackBar(
                          const SnackBar(
                            content: Text("Has≈Ço zosta≈Ço zmienione ‚úÖ"),
                            backgroundColor: Colors.green,
                          ),
                        );
                      }
                    },
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.orange,
                      minimumSize: const Size(150, 50),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                    child: const Text(
                      "Zmie≈Ñ has≈Ço",
                      style: TextStyle(
                        color: Colors.white,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }